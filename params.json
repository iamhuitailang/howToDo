{"name":"Howtodo","tagline":"android的实践开发如何更好","body":"# # howToDo\r\n## android的实践开发如何更好（从项目中总结的）\r\n\r\n1、使用 Gradle 和它推荐的工程结构（推荐使用AndroidStudio进行开发）\r\n\r\n2、把密码和敏感数据放在gradle.properties，亲身实践，谁用谁知道，好！！！！（推荐使用AndroidStudio进行开发）\r\n\r\n3、尽量不要自己去封装各种http请求，除非特别需要的，尽量使用Volley或OkHttp库，他们更贴近与Google。\r\n\r\n4、使用Jackson库或者是GSON解析JSON数据，提高解析速度\r\n\r\n5、避免使用Guava同时使用一些类库来避免65k method limit（一个Android程序中最多能执行65536个方法）\r\n\r\n6、尽量合理的使用 Fragment来呈现UI视图，使用 Activity 只是为了管理 Fragment（多个Fragments+管理的少量的Acivity会让你的手机app运行的更加流畅），请不要滥用，如果出现matryoshka bugs，你会有种想自杀的冲动\r\n\r\n7、Layout 布局是 XML代码，组织好它们，尽量较少使用代码去组织或者是更改布局，因为那样影响性能\r\n\r\n8、在layoutout XML布局时，使用styles文件来避免使用重复的属性\r\n\r\n9、使用多个style文件来避免单一的一个大style文件\r\n\r\n10、保持你的colors.xml 去加载颜色值，相信我，如果数量庞大的时候他会给你减少很多麻烦。\r\n\r\n11、总是使用dimens.xml(不要重复自己)，定义通用常数，道理同上\r\n\r\n12 、尽量使用一套图去适配手机，这样做可以减少你的APK的臃肿，特别需要的可以用多个dimens去控制，例如（values-hdpi、values-xhdpi）\r\n\r\n13、不要做一个深层次的ViewGroup，虽然那样会让你看起来很牛，但是为了考虑性能而言尽量节制，除非你能达到大师的等级\r\n\r\n14、在使用WebView时避免在客户端做处理，当心内存泄露\r\n\r\n15、尽量可能的不要去引用第三方的jar包，有时候他会害了你\r\n\r\n16、尽量开发时遵守面向对象的设计原则，例如里氏替换原则、单一职责、开闭原则、接口脱离等不一一叙述了，前人为我们创造的面向对象的原则，肯定有他们的用意，如果你实在不懂，别管，遵守就好了。\r\n\r\n17、开发时一定要有一套开发规范，这样不会让接手你代码人恨你，也会为你们的开发提供一个模板。\r\n\r\n18、推荐使用Robolectric单元测试，Robotium 做UI测试；如果你没做过，那就开始学习好了，就是现在！\r\n\r\n PS:总结了一下，有的时候深受其害，终于下定决心，写下来了。\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}